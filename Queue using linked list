#include<stdio.h>
#include<stdlib.h>
#include<malloc.h>
struct queue 
{
    int data;
    struct queue *next;
};
typedef struct queue node;
node *front=NULL,*rear=NULL;
void enqueue(int x)
{
    node *new;
    new=(node*)malloc(sizeof(node));
    new->data=x;
    new->next=NULL;
    if(front==NULL)
    {
        front=rear=new;
    }
    else
    {
        rear->next=new;
        rear=new;
    }
}
int dequeue()
{
    int x;
    node *temp;
    if(front==NULL)
    {
        return -1;
    }
    else
    {
        x=front->data;
        if(front==rear)
        {
            front=rear=NULL;
        }
        else
        {
            temp=front;
            front=front->next;
            free(temp);
        }
        return x;
    }
}
void display()
{
    node *temp;
    if(front==NULL)
    {
        printf("queue is empty");
    }
    else
    {
        temp=front;
        while(temp!=NULL)
        {
            printf("|%d|->",temp->data);
            temp=temp->next;
        }
        printf("NULL");
    }
}
void main()
{
    int x,ch,c;
    while(1)
    {
        printf("1.enqueue\n 2.dequeue\n 3.display\n 4.exit\n");
        printf("enter choice");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:printf("enter element to insert");
                   scanf("%d",&x);
                   enqueue(x);
                   break;
            case 2:c=dequeue();
                   if(c==-1)
                   {
                       printf("queue underflow");
                   }
                   else
                   {
                       printf("%d element is deleted",c);
                   }
                   break;
            case 3:printf("the elements in queue are:");
                   display();
                   break;
            case 4:exit(1);
        }
    }
}
